{"version":3,"sources":["App.js","index.js"],"names":["ListItem","index","task","onDelete","start","setStart","swap","React","useState","isOver","setIsOver","events","onDragEnter","e","onDragLeave","onDragOver","preventDefault","onDrop","onContextMenu","id","className","onDragStart","draggable","title","color","App","tasks","setTasks","useEffect","localTasks","localStorage","getItem","JSON","parse","swapTasks","from","to","updatedTasks","temp","setItem","stringify","startIndex","setStartIndex","newTask","setNewTask","deleteTask","filter","onSubmit","uuid","type","value","onChange","target","placeholder","size","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAqEA,IAAMA,EAAW,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC1D,EAA4BC,IAAMC,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KA4BMC,EAAS,CACbC,YAvBkB,SAACC,GACnBH,GAAU,IAuBVI,YApBkB,SAACD,GACnBH,GAAU,IAoBVK,WA7BiB,SAACF,GAClBA,EAAEG,kBA6BFC,OAlBa,SAACJ,GACdH,GAAU,GACVJ,EAAKF,EAAOH,IAiBZiB,cAVoB,SAACL,GACrBA,EAAEG,iBACFb,EAASD,EAAKiB,MAWhB,OACE,+CAAQR,GAAR,IAAgBS,UAAWX,EAAS,OAAS,GAA7C,UACE,+BAAOR,EAAQ,IACf,sBAAKoB,YApBW,SAACR,GACnBR,EAASJ,IAmBwBqB,UAAU,OAAzC,UACE,4BAAIpB,EAAKqB,QACT,cAAC,IAAD,CAAaC,MAAM,oBAMZC,EAhHf,WACE,MAA0BlB,IAAMC,SAAS,IAAzC,mBAAOkB,EAAP,KAAcC,EAAd,KAEApB,IAAMqB,WAAU,WACd,IAAMC,EAAaC,aAAaC,QAAQ,SACpCF,GACFF,EAASK,KAAKC,MAAMJ,MAErB,IAIH,IAAMK,EAAY,SAACC,EAAMC,GACvB,IAAMC,EAAY,YAAOX,GACnBY,EAAOD,EAAaF,GAC1BE,EAAaF,GAAQE,EAAaD,GAClCC,EAAaD,GAAME,EACnBX,EAASU,GACTP,aAAaS,QAAQ,QAASP,KAAKQ,UAAUH,KAG/C,EAAoC9B,IAAMC,UAAU,GAApD,mBAAOiC,EAAP,KAAmBC,EAAnB,KACA,EAA8BnC,IAAMC,SAAS,IAA7C,mBAAOmC,EAAP,KAAgBC,EAAhB,KAiBMC,EAAa,SAAC1B,GAClB,IAAMkB,EAAeX,EAAMoB,QAAO,SAAA5C,GAAI,OAAIA,EAAKiB,KAAOA,KACtDQ,EAASU,GACTP,aAAaS,QAAQ,QAASP,KAAKQ,UAAUH,KAG/C,OACE,sBAAKjB,UAAU,YAAf,UACE,uBAAMA,UAAU,eAAe2B,SAnBnB,SAAClC,GAGf,GAFAA,EAAEG,iBAEE2B,EAAS,CACX,IAAMN,EAAY,sBAAOX,GAAP,CAAc,CAAEP,GAAI6B,cAAQzB,MAAOoB,KACrDhB,EAASU,GACTO,EAAW,IACXd,aAAaS,QAAQ,QAASP,KAAKQ,UAAUH,MAY7C,UACE,uBAAOY,KAAK,OAAOC,MAAOP,EAASQ,SAxBxB,SAACtC,GAChB+B,EAAW/B,EAAEuC,OAAOF,QAuBuCG,YAAY,qBACnE,sBAAMjC,UAAWuB,EAAU,UAAY,SAAvC,SACE,cAAC,IAAD,CAAcW,KAAM,GAAI9B,MAAM,iBAGlC,oBAAIJ,UAAU,8BAAd,SAEIM,EAAM6B,KAAI,SAACrD,EAAMD,GAAP,OACR,cAAC,EAAD,CAAUK,KAAM4B,EAAyBjC,MAAOA,EAAOC,KAAMA,EAAMC,SAAU0C,EAAYzC,MAAOqC,EAAYpC,SAAUqC,GAAtFxC,EAAKiB,a,MCvDjDqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc4c43de.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaGripLines } from \"react-icons/fa\";\nimport { FiArrowRight } from \"react-icons/fi\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction App() {\n  const [tasks, setTasks] = React.useState([]);\n\n  React.useEffect(() => {\n    const localTasks = localStorage.getItem(\"tasks\");\n    if (localTasks) {\n      setTasks(JSON.parse(localTasks));\n    }\n  }, []);\n\n\n\n  const swapTasks = (from, to) => {\n    const updatedTasks = [...tasks];\n    const temp = updatedTasks[from];\n    updatedTasks[from] = updatedTasks[to];\n    updatedTasks[to] = temp;\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  }\n\n  const [startIndex, setStartIndex] = React.useState(-1);\n  const [newTask, setNewTask] = React.useState(\"\");\n\n  const onChange = (e) => {\n    setNewTask(e.target.value);\n  }\n\n  const addTask = (e) => {\n    e.preventDefault();\n\n    if (newTask) {\n      const updatedTasks = [...tasks, { id: uuid(), title: newTask }];\n      setTasks(updatedTasks);\n      setNewTask(\"\");\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    }\n  }\n\n  const deleteTask = (id) => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  }\n\n  return (\n    <div className=\"container\">\n      <form className=\"glass-effect\" onSubmit={addTask}>\n        <input type=\"text\" value={newTask} onChange={onChange} placeholder=\"Add Your Task...\" />\n        <span className={newTask ? \"visible\" : \"hidden\"}>\n          <FiArrowRight size={22} color=\"#555555\" />\n        </span>\n      </form>\n      <ul className=\"draggable-list glass-effect\">\n        {\n          tasks.map((task, index) =>\n            <ListItem swap={swapTasks} key={task.id} index={index} task={task} onDelete={deleteTask} start={startIndex} setStart={setStartIndex} />\n          )\n        }\n      </ul>\n    </div>\n  );\n}\n\nconst ListItem = ({ index, task, onDelete, start, setStart, swap }) => {\n  const [isOver, setIsOver] = React.useState(false);\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  }\n\n  const onDragEnter = (e) => {\n    setIsOver(true);\n  }\n\n  const onDragLeave = (e) => {\n    setIsOver(false);\n  }\n\n  const onDrop = (e) => {\n    setIsOver(false);\n    swap(start, index);\n  }\n\n  const onDragStart = (e) => {\n    setStart(index);\n  }\n\n  const onContextMenu = (e) => {\n    e.preventDefault();\n    onDelete(task.id);\n  }\n\n  const events = {\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n    onContextMenu,\n  };\n\n  return (\n    <li {...events} className={isOver ? \"over\" : \"\"}>\n      <span>{index + 1}</span>\n      <div onDragStart={onDragStart} draggable=\"true\">\n        <p>{task.title}</p>\n        <FaGripLines color=\"#555555\" />\n      </div>\n    </li>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}